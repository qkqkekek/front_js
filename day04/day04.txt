반복문
for문
for(초기식; 조건식; 증감식){}

for(let i=0; i < 10; i++) {
  조건식이 참일 때 실행할 문장;
}


while문
while(조건식){
  실행할 문장
}

for문과 while문의 목적
-for : 몇 번 반복할지 알 떄
-while : 몇 번 반복할지 모를 때



1. 프로그래밍 패러다임
-개발자에게 프로그래머로서 관심을 갖게 하고 결정하는 역할, 즉 개발 방법

1-1. 패러다임 종류
      -명령형
        절차지향형 : 순서를 중요시하며 컴퓨터의 처리 구조와 비슷하게 개발하여 속도가 빠르다
        ex) c언어, cobol...
        
        객체 지향형 : 객체(집단)의 상호 작용을 중요시하여 유지 보수가 용이하다
        ex) JAVA, C++, ...
      
      -선언형
        무엇을 할 것인지가 중요한 개발
        순수 함수를 조합하고 프로그래밍 하는 방식으로 함수 지향형 프로그래밍 언어
        ex) JavaScript, ....

2. 함수란? (function)
코드 블록으로 감싸져 있는 문으로 이루어진 하나의 실행 단위

2-1. 함수의 이름 짓기
ex)
showMessage // 메세지를 보여준다
getAge // 나이를 가져온다.
createForm // form을 생성하고 만들어진 form을 반환한다.

2-2. 함수의 규칙
함수는 하나의 동작만 담당해야 한다.
함수는 이름이 언급되어 있는 동작을 정확히 수행해야한다
이름에 언급되지 않은 동작을 같이 수행하면 안된다

2-3. 함수의 선언
function 함수명(파라미터1, 파라미터2,.....){
  함수 내부에서 실행할 문장;
  return 리턴 값이 있다면 리턴 키워드를 사용하며, 생략가능하다.
}

2-4. 함수의 실행
함수명()

만약에 return이 없다면 비즈니스 로직만 실행하고 undefined
즉 함수의 기능은 정상작동하나 값은 존재하지 않는 상태이다.
함수에 return 키워드가 있다면 전체는 return 값으로 보아야 한다.














